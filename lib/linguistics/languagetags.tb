#!/usr/bin/ruby
#coding: utf-8


#
# linguistics/languagetags.rb - A hash of standardized language codes ala RFC5646 
# (http://tools.ietf.org/html/rfc5646). Each entry has two keys:
#
# [<tt>:codes</tt>]
#   All of the codes known for this language
# [<tt>:desc</tt>]
#   The English-language description of the language.
#
# :include: LICENSE
#
#--
#
# Please see the file LICENSE in the base directory for licensing details.
#
module Linguistics

	# linguistics/languagetags.rb - A hash of standardized language codes ala RFC5646 
	# (http://tools.ietf.org/html/rfc5646). Each entry has two keys:
	#
	# [<tt>:codes</tt>]
	#   All of the codes known for this language
	# [<tt>:desc</tt>]
	#   The English-language description of the language.
	LANGUAGE_CODES = {}


	### Read 'record-jar' (http://www.faqs.org/docs/artu/ch05s02.html#id2906931) records 
	### from the given +string+ and yield them one at a time.
	def read_record_jar( string )
		jarfile.split( /^%%\s*$/ ).each do |section|
			next if section.index( 'File-Date' )
			sectionhash = section.split( /\n(?!\s)/ ).inject({}) do |hash, line|
				key, val = line.split( ':', 2 )
				hash[ key.downcase.to_sym ] = val
				hash
			end
			yield( sectionhash )
		end
	end


	# Read through the source for this file, capturing everything
	# between __END__ and __END_DATA__ tokens.
	begin
		registry = IO.read( __FILE__ ).split( /^__END__/, 2 ).last

		# Read the language-code registry in 'record-jar' format
		read_record_jar( registry ) do |section|
			next unless section[:type] == 'language'
		}

	end
end

